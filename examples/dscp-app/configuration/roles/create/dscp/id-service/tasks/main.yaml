##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

#Check if the pods for the organizations are up and running
- name: "Waiting for peer pod {{ peer.name }} in {{ component_ns }}"
  include_role:
    name: "{{ playbook_dir }}/../../../platforms/shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ component_ns }}"
    component_name: "{{ peer.name }}"
    kubernetes: "{{ org.k8s }}"
    label_selectors:
      - app.kubernetes.io/name = {{ component_name }}
      - chain = {{ network.config.chain }}
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: (peer.postgresql is defined) and (peer.id_service is defined)

# This populates the account_addr details
- name: Get account_addr details from Vault
  include_tasks: get_account_id.yaml
  vars:
    component_ns: "{{ org.name | lower }}-subs"
    vault: "{{ org.vault }}"
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: (peer.postgresql is defined) and (peer.id_service is defined)

# Create id-service values file for the peer nodes
- name: "Create id-service values file for all peers"
  include_role:
    name: helm_component
  vars:
    type: "dscp-id-service"
    component_name: "{{ peer.name }}-id-service"
    name: "{{ peer.name }}"
    charts_dir: "examples/dscp-app/charts"
    account_addr: "{{ account_id.stdout }}"
    db_name: "{{ peer.postgresql.database_name }}"
    db_port: "{{ peer.postgresql.port }}"
    db_address: "{{ peer.name }}-id-service-postgresql"
    db_password: "{{ peer.postgresql.password }}"
    ambassador_port: ""
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: (peer.postgresql is defined) and (peer.id_service is defined)

# Push the id-service deployment files to repository
- name: "Push the created deployment files to repository"
  include_role: 
    name: "{{ playbook_dir }}/../../../platforms/shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    gitops: "{{ component_gitops }}"
    GIT_RESET_PATH: "platforms/substrate/configuration"
    msg: "[ci skip] Pushing deployment files for dscp id-service"

# Wait for id-service Pod to run
- name: "Waiting for id-service pod in {{ component_ns }}"
  include_role:
    name: "{{ playbook_dir }}/../../../platforms/shared/configuration/roles/check/helm_component"
  vars:
    component_type: "Pod"
    namespace: "{{ component_ns }}"
    component_name: "{{ peer.name }}-id-service-dscp-identity-service"
    kubernetes: "{{ org.k8s }}"
    label_selectors:
      - name = {{ component_name }}
  loop: "{{ org.services.peers }}"
  loop_control:
    loop_var: peer
  when: (peer.postgresql is defined) and (peer.id_service is defined)

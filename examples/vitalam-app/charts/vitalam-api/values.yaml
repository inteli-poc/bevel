
##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# metadata provides information about the deployment
# for eg. namespace: example-sub 
# eg. replicaCount: 1
metadata:
  namespace:
  replicaCount:

# image based on alpine linux
# for eg. alpineutils: hyperledgerlabs/alpine-utils:1.0 #this image has curl installed
images:
  alpineutils:

# This section contains the vault related information.
# NOTE: Make sure that the vault is already unsealed, intialized and configured to
# use the Kubernetes service account token based authentication.
vault:
  # address provide the vault address
  # Eg. address: http://vault.example.com:8200
  address:
  # secretprefix provide the vault path where the secrets are stored
  # Eg. secretPrefix: secretsv2/sub-org-name
  secretprefix:
  # serviceaccountname provide the service account name authenticated to vault.
  # NOTE: Make sure that the service account is already created and authenticated to use the vault.
  # Eg. serviceaccountname: vault-auth
  serviceaccountname:
  # role provide the vault role used.
  # Eg. appRole: vault-role
  role:
  # authPath provide the auth path configured to be used. Default is /kubernetes
  authpath:

# Node provides information on the peer
# Eg. peerName: store; type: validator
node:
  peerName:
  type:

# api section provides the information about the image used and the node port
# eg. repository: ghcr.io/digicatapult/vitalam-api
api:
  image:
    repository:
    tag:
    pullPolicy:
    pullSecrets:
  port:
  serviceType:

# The environment variables used by the vitalam api 
# Eg. logLevel: info
# Eg. tokenUrl: https://example.eu.auth0.com/oauth/token
env:
  logLevel:
  ipfsPort:
  port:
  auth:
    jwksUri:
    audience:
    issuer:
    tokenUrl:

# This will be the proxy/ingress provider. Can have values "ambassador" or "haproxy"
# Eg. provider: "haproxy"
proxy:
  provider:
# This will be the name of the organization
# Eg. name: carrier
  name:
# External URL of the organization
# Eg. external_url_suffix: test.vitalam.example.com
  external_url_suffix:
# Name of the peer
# Eg. peer_name: manufacturer
  peer_name:
